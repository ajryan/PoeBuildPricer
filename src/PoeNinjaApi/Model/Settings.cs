/*
 * poe.ninja API
 *
 * Public API of poe.ninja (mainly economy for now).
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = PoeNinjaApi.Client.OpenAPIDateConverter;

namespace PoeNinjaApi.Model
{
    /// <summary>
    /// Settings
    /// </summary>
    [DataContract(Name = "Settings")]
    public partial class Settings : IEquatable<Settings>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Settings" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Settings() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Settings" /> class.
        /// </summary>
        /// <param name="id">id (required).</param>
        /// <param name="nextChangeId">nextChangeId.</param>
        /// <param name="apiBytesDownloaded">apiBytesDownloaded (required).</param>
        /// <param name="stashTabsProcessed">stashTabsProcessed (required).</param>
        /// <param name="apiCalls">apiCalls (required).</param>
        /// <param name="characterBytesDownloaded">characterBytesDownloaded (required).</param>
        /// <param name="characterApiCalls">characterApiCalls (required).</param>
        /// <param name="ladderBytesDownloaded">ladderBytesDownloaded (required).</param>
        /// <param name="ladderApiCalls">ladderApiCalls (required).</param>
        /// <param name="pobCharactersCalculated">pobCharactersCalculated (required).</param>
        public Settings(int id = default(int), string nextChangeId = default(string), long apiBytesDownloaded = default(long), long stashTabsProcessed = default(long), long apiCalls = default(long), long characterBytesDownloaded = default(long), long characterApiCalls = default(long), long ladderBytesDownloaded = default(long), long ladderApiCalls = default(long), long pobCharactersCalculated = default(long))
        {
            this.Id = id;
            this.ApiBytesDownloaded = apiBytesDownloaded;
            this.StashTabsProcessed = stashTabsProcessed;
            this.ApiCalls = apiCalls;
            this.CharacterBytesDownloaded = characterBytesDownloaded;
            this.CharacterApiCalls = characterApiCalls;
            this.LadderBytesDownloaded = ladderBytesDownloaded;
            this.LadderApiCalls = ladderApiCalls;
            this.PobCharactersCalculated = pobCharactersCalculated;
            this.NextChangeId = nextChangeId;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Gets or Sets NextChangeId
        /// </summary>
        [DataMember(Name = "next_change_id", EmitDefaultValue = false)]
        public string NextChangeId { get; set; }

        /// <summary>
        /// Gets or Sets ApiBytesDownloaded
        /// </summary>
        [DataMember(Name = "api_bytes_downloaded", IsRequired = true, EmitDefaultValue = false)]
        public long ApiBytesDownloaded { get; set; }

        /// <summary>
        /// Gets or Sets StashTabsProcessed
        /// </summary>
        [DataMember(Name = "stash_tabs_processed", IsRequired = true, EmitDefaultValue = false)]
        public long StashTabsProcessed { get; set; }

        /// <summary>
        /// Gets or Sets ApiCalls
        /// </summary>
        [DataMember(Name = "api_calls", IsRequired = true, EmitDefaultValue = false)]
        public long ApiCalls { get; set; }

        /// <summary>
        /// Gets or Sets CharacterBytesDownloaded
        /// </summary>
        [DataMember(Name = "character_bytes_downloaded", IsRequired = true, EmitDefaultValue = false)]
        public long CharacterBytesDownloaded { get; set; }

        /// <summary>
        /// Gets or Sets CharacterApiCalls
        /// </summary>
        [DataMember(Name = "character_api_calls", IsRequired = true, EmitDefaultValue = false)]
        public long CharacterApiCalls { get; set; }

        /// <summary>
        /// Gets or Sets LadderBytesDownloaded
        /// </summary>
        [DataMember(Name = "ladder_bytes_downloaded", IsRequired = true, EmitDefaultValue = false)]
        public long LadderBytesDownloaded { get; set; }

        /// <summary>
        /// Gets or Sets LadderApiCalls
        /// </summary>
        [DataMember(Name = "ladder_api_calls", IsRequired = true, EmitDefaultValue = false)]
        public long LadderApiCalls { get; set; }

        /// <summary>
        /// Gets or Sets PobCharactersCalculated
        /// </summary>
        [DataMember(Name = "pob_characters_calculated", IsRequired = true, EmitDefaultValue = false)]
        public long PobCharactersCalculated { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Settings {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  NextChangeId: ").Append(NextChangeId).Append("\n");
            sb.Append("  ApiBytesDownloaded: ").Append(ApiBytesDownloaded).Append("\n");
            sb.Append("  StashTabsProcessed: ").Append(StashTabsProcessed).Append("\n");
            sb.Append("  ApiCalls: ").Append(ApiCalls).Append("\n");
            sb.Append("  CharacterBytesDownloaded: ").Append(CharacterBytesDownloaded).Append("\n");
            sb.Append("  CharacterApiCalls: ").Append(CharacterApiCalls).Append("\n");
            sb.Append("  LadderBytesDownloaded: ").Append(LadderBytesDownloaded).Append("\n");
            sb.Append("  LadderApiCalls: ").Append(LadderApiCalls).Append("\n");
            sb.Append("  PobCharactersCalculated: ").Append(PobCharactersCalculated).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Settings);
        }

        /// <summary>
        /// Returns true if Settings instances are equal
        /// </summary>
        /// <param name="input">Instance of Settings to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Settings input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    this.Id.Equals(input.Id)
                ) && 
                (
                    this.NextChangeId == input.NextChangeId ||
                    (this.NextChangeId != null &&
                    this.NextChangeId.Equals(input.NextChangeId))
                ) && 
                (
                    this.ApiBytesDownloaded == input.ApiBytesDownloaded ||
                    this.ApiBytesDownloaded.Equals(input.ApiBytesDownloaded)
                ) && 
                (
                    this.StashTabsProcessed == input.StashTabsProcessed ||
                    this.StashTabsProcessed.Equals(input.StashTabsProcessed)
                ) && 
                (
                    this.ApiCalls == input.ApiCalls ||
                    this.ApiCalls.Equals(input.ApiCalls)
                ) && 
                (
                    this.CharacterBytesDownloaded == input.CharacterBytesDownloaded ||
                    this.CharacterBytesDownloaded.Equals(input.CharacterBytesDownloaded)
                ) && 
                (
                    this.CharacterApiCalls == input.CharacterApiCalls ||
                    this.CharacterApiCalls.Equals(input.CharacterApiCalls)
                ) && 
                (
                    this.LadderBytesDownloaded == input.LadderBytesDownloaded ||
                    this.LadderBytesDownloaded.Equals(input.LadderBytesDownloaded)
                ) && 
                (
                    this.LadderApiCalls == input.LadderApiCalls ||
                    this.LadderApiCalls.Equals(input.LadderApiCalls)
                ) && 
                (
                    this.PobCharactersCalculated == input.PobCharactersCalculated ||
                    this.PobCharactersCalculated.Equals(input.PobCharactersCalculated)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.NextChangeId != null)
                    hashCode = hashCode * 59 + this.NextChangeId.GetHashCode();
                hashCode = hashCode * 59 + this.ApiBytesDownloaded.GetHashCode();
                hashCode = hashCode * 59 + this.StashTabsProcessed.GetHashCode();
                hashCode = hashCode * 59 + this.ApiCalls.GetHashCode();
                hashCode = hashCode * 59 + this.CharacterBytesDownloaded.GetHashCode();
                hashCode = hashCode * 59 + this.CharacterApiCalls.GetHashCode();
                hashCode = hashCode * 59 + this.LadderBytesDownloaded.GetHashCode();
                hashCode = hashCode * 59 + this.LadderApiCalls.GetHashCode();
                hashCode = hashCode * 59 + this.PobCharactersCalculated.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
